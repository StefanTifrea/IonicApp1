[{"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\index.tsx":"1","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\serviceWorker.ts":"2","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\App.tsx":"3","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\auth\\Logout.tsx":"4","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\SongProvider.tsx":"5","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\index.tsx":"6","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\auth\\index.tsx":"7","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\auth\\AuthProvider.tsx":"8","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\SongApi.tsx":"9","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\OperationProps.tsx":"10","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\core\\LocalStorage.tsx":"11","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\network\\useNetwork.tsx":"12","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\SongList.tsx":"13","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\SongEdit.tsx":"14","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\auth\\PrivateRoute.tsx":"15","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\auth\\Login.tsx":"16","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\core\\index.tsx":"17","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\auth\\AuthApi.tsx":"18","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\Song.tsx":"19","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\usePhotoGalllery.tsx":"20"},{"size":527,"mtime":1607875366650,"results":"21","hashOfConfig":"22"},{"size":5213,"mtime":1601044952000,"results":"23","hashOfConfig":"22"},{"size":1780,"mtime":1606673486720,"results":"24","hashOfConfig":"22"},{"size":298,"mtime":1605556733045,"results":"25","hashOfConfig":"22"},{"size":9285,"mtime":1608729202564,"results":"26","hashOfConfig":"22"},{"size":98,"mtime":1604179761073,"results":"27","hashOfConfig":"22"},{"size":92,"mtime":1605035973890,"results":"28","hashOfConfig":"22"},{"size":3700,"mtime":1607795068980,"results":"29","hashOfConfig":"22"},{"size":1750,"mtime":1608025980813,"results":"30","hashOfConfig":"22"},{"size":316,"mtime":1607781843853,"results":"31","hashOfConfig":"22"},{"size":1695,"mtime":1608027943700,"results":"32","hashOfConfig":"22"},{"size":839,"mtime":1606673104342,"results":"33","hashOfConfig":"22"},{"size":4143,"mtime":1610110563028,"results":"34","hashOfConfig":"22"},{"size":4281,"mtime":1610110555947,"results":"35","hashOfConfig":"22"},{"size":867,"mtime":1606501394907,"results":"36","hashOfConfig":"22"},{"size":2232,"mtime":1606759227913,"results":"37","hashOfConfig":"22"},{"size":2052,"mtime":1605552397953,"results":"38","hashOfConfig":"22"},{"size":389,"mtime":1605042391760,"results":"39","hashOfConfig":"22"},{"size":1217,"mtime":1610109285338,"results":"40","hashOfConfig":"22"},{"size":2734,"mtime":1610111297080,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"9fvyf5",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\index.tsx",[],["87","88"],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\serviceWorker.ts",[],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\App.tsx",["89"],"import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { SongEdit, SongList } from './todo'\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport { SongProvider } from './todo/SongProvider';\nimport { AuthProvider, Login, PrivateRoute } from './auth';\nimport {Logout} from './auth/Logout'\nimport { useNetwork } from './network/useNetwork';\n\nconst App: React.FC = () => (\n  \n\n  <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <AuthProvider>\n          <Route path=\"/login\" component={Login} exact={true}/>\n          <Route path=\"/logout\" component={Logout} exact={true}/>\n          <SongProvider>\n            <PrivateRoute path=\"/songs\" component={SongList} exact={true} />\n            <PrivateRoute path=\"/song\" component={SongEdit} exact={true}/>\n            <PrivateRoute path=\"/song/:id\" component={SongEdit} exact={true}/>   \n          </SongProvider>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/songs\" />} />\n        </AuthProvider>\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\auth\\Logout.tsx",[],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\SongProvider.tsx",["90","91","92"],"import React, { useCallback, useEffect, useReducer, useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogger } from '../core';\r\nimport { SongProps } from './SongProps';\r\nimport { createSong, getSongsPage, updateSong, newWebSocket } from './SongApi';\r\nimport {AuthContext} from '../auth'\r\nimport { addLocalItems, getLocalItems, addItemToLocal, getOfflineOperations, addOperationToLocal, clearOfflineOperations } from '../core/LocalStorage'\r\nimport { OperationProps } from './OperationProps';\r\nimport { useNetwork } from '../network/useNetwork';\r\n\r\n\r\nconst log = getLogger('SongProvider');\r\n\r\ntype SaveSongFn = (song: SongProps) => Promise<any>;\r\ntype GetSongsCallBackFn = (page: number, pageSize: number, endScrolling: boolean, filter: string) => Promise<any>;\r\n\r\nexport interface SongsState {\r\n    songs?: SongProps[],\r\n    fetching: boolean,\r\n    fetchingError?: Error | null,\r\n    saving: boolean,\r\n    savingError?: Error | null,\r\n    saveSong?: SaveSongFn,\r\n    getSongsCallBack?: GetSongsCallBackFn,\r\n}\r\n\r\ninterface ActionProps{\r\n    type: string,\r\n    payload?: any,\r\n}\r\n\r\nconst initialState: SongsState = {\r\n  fetching: false,\r\n  saving: false,\r\n};\r\n\r\nconst FETCH_SONGS_STARTED = 'FETCH_SONGS_STARTED';\r\nconst FETCH_SONGS_SUCCEEDED = 'FETCH_SONGS_SUCCEEDED';\r\nconst FETCH_SONGS_FAILED = 'FETCH_SONGS_FAILED';\r\nconst SAVE_SONG_STARTED = 'SAVE_SONG_STARTED';\r\nconst SAVE_SONG_SUCCEEDED = 'SAVE_SONG_SUCCEEDED';\r\nconst SAVE_SONG_FAILED = 'SAVE_SONG_FAILED';\r\nconst CLEAR_SONGS = 'CLEAR_SONGS';\r\n\r\nconst reducer: (state: SongsState, action: ActionProps) => SongsState =\r\n  (state, { type, payload }) => {\r\n    switch(type) {\r\n      case FETCH_SONGS_STARTED:\r\n        return { ...state, fetching: true, fetchingError: null };\r\n      case FETCH_SONGS_SUCCEEDED:\r\n        return { ...state, songs: payload.songs, fetching: false };\r\n      case FETCH_SONGS_FAILED:\r\n        return { ...state, fetchingError: payload.error, fetching: false };\r\n      case SAVE_SONG_STARTED:\r\n        return { ...state, savingError: null, saving: true };\r\n      case SAVE_SONG_SUCCEEDED:\r\n        const songs = [...(state.songs || [])];\r\n        const song = payload.song;\r\n        const index = songs.findIndex(it => it._id === song._id);\r\n        if (index === -1) {\r\n          songs.splice(songs.length, 0, song);\r\n        } else {\r\n          songs[index] = song;\r\n        }\r\n        return { ...state,  songs, saving: false };\r\n      case SAVE_SONG_FAILED:\r\n        return { ...state, savingError: payload.error, saving: false };\r\n      case CLEAR_SONGS:\r\n        return { ...state, songs: []}\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const SongContext = React.createContext<SongsState>(initialState);\r\n\r\ninterface SongProviderProps {\r\n  children: PropTypes.ReactNodeLike,\r\n}\r\n\r\nexport const SongProvider: React.FC<SongProviderProps> = ({ children }) => {\r\n\r\n  const {networkStatus} = useNetwork();\r\n\r\n  const { token } = useContext(AuthContext);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { songs, fetching, fetchingError, saving, savingError } = state;\r\n\r\n  const [page, setPage] = useState<number>(1);\r\n\r\n  const [pageSize, setPageSize] = useState<number>(0);\r\n\r\n  const [endScrolling, setEndScrolling] = useState<boolean>(false);\r\n\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n\r\n  const [resetView, setResetView] = useState<boolean>(false);\r\n\r\n  const getSongsCallBack = useCallback<GetSongsCallBackFn>(setPageDetails, [token]);\r\n\r\n  const saveSong = useCallback<SaveSongFn>(saveSongCallback, [token]);\r\n\r\n  const value = { songs, fetching, fetchingError, saving, savingError, saveSong, getSongsCallBack };\r\n\r\n  useEffect(clearOldSongsEffect, [filter]);\r\n\r\n  useEffect(getSongsEffect, [token, page, pageSize, filter]);\r\n\r\n  \r\n\r\n  useEffect(wsEffect, [token]);\r\n\r\n  useEffect(localSongsEffect, [networkStatus.connected]);\r\n\r\n  log('returns');\r\n  return (\r\n    <SongContext.Provider value={value}>\r\n      {children}\r\n    </SongContext.Provider>\r\n  );\r\n  \r\n  async function setPageDetails(page: number, pageSize: number, ending: boolean, filter: string) {\r\n    setPage(page);\r\n    setPageSize(pageSize);\r\n    setEndScrolling(ending);\r\n    setFilter(filter);\r\n  }\r\n\r\n  function clearOldSongsEffect(){\r\n\r\n    reset();\r\n\r\n    async function reset() {\r\n      log(\"CALLED\");\r\n     setResetView(true);\r\n    }\r\n  }\r\n\r\n  function localSongsEffect(){\r\n    \r\n    fetchLocal();\r\n\r\n    async function fetchLocal(){\r\n\r\n      log('fecthing offline data');\r\n      \r\n      const result = (await getOfflineOperations()).value;\r\n\r\n      if(result){\r\n        const operations = JSON.parse(result);\r\n        for(let i = 0;i<operations.length; i++){\r\n          log(operations);\r\n\r\n          saveSongCallback(operations[i].song);\r\n          \r\n        }\r\n      }\r\n\r\n      clearOfflineOperations();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function getSongsEffect() {\r\n    let canceled = false;\r\n    fetchSongs();\r\n    return () => {\r\n      canceled = true;\r\n    }\r\n\r\n    async function fetchSongs() {\r\n      log('ended ', endScrolling)\r\n      if(endScrolling){\r\n        return;\r\n      }\r\n\r\n      log('token ', token);\r\n      if(!token?.trim()){\r\n        return;\r\n      }\r\n\r\n      let result = []\r\n      try {\r\n        log('fetchSongs started');\r\n        dispatch({ type: FETCH_SONGS_STARTED });\r\n\r\n        log('Page', page);\r\n        const items = await getSongsPage(token, page, pageSize, filter);\r\n\r\n        \r\n        if(page > 0){\r\n          setResetView(false);\r\n        }\r\n        \r\n\r\n        log('Page of items', items);\r\n        log('Existing songs', songs);\r\n        log('Reset view', resetView);\r\n        if(songs && !resetView){\r\n          if(songs.length >= pageSize){\r\n            for(let i = 0;i<songs.length;i++){\r\n              result.push(songs[i]);\r\n            }\r\n          }\r\n          \r\n        }\r\n\r\n        /*\r\n        if(page > 0){\r\n          setResetView(false);\r\n        }\r\n          */\r\n        for(let i = 0;i<items.length;i++){\r\n          let n = true;\r\n          for(let j = 0; j< result.length; j++){\r\n            if(items[i]._id === result[j]._id){\r\n              n = false;\r\n              result[j] = items[i];\r\n            }\r\n            \r\n          }\r\n            \r\n          if(n){\r\n            result.push(items[i]);\r\n          }\r\n        }\r\n\r\n        \r\n        \r\n        log('fetchSongs succeeded');\r\n\r\n        addLocalItems(result);\r\n\r\n        if (!canceled) {\r\n          dispatch({ type: FETCH_SONGS_SUCCEEDED, payload: { songs: result } });\r\n        }\r\n\r\n        if(items.length < pageSize){\r\n          log('scrolling disabled');\r\n            setEndScrolling(true);\r\n        }\r\n        \r\n        \r\n      } catch (error) {\r\n\r\n        let locals = await getLocalItems();\r\n        if(locals.value){\r\n          log('fetchSongs local')\r\n          result = JSON.parse(locals.value);\r\n          dispatch({ type: FETCH_SONGS_SUCCEEDED, payload: { songs: result } });\r\n        }\r\n        else{\r\n          log('fetchSongs failed');\r\n          dispatch({ type: FETCH_SONGS_FAILED, payload: { error } });\r\n        }\r\n\r\n        \r\n      }\r\n        \r\n    }\r\n  }\r\n\r\n  async function saveSongCallback(song: SongProps) {\r\n\r\n      try {\r\n        log('saveSong started');\r\n        dispatch({ type: SAVE_SONG_STARTED });\r\n        const savedSong = await (song._id ? updateSong(token, song) : createSong(token, song));\r\n        log('saveSong succeeded' + savedSong);\r\n        //dispatch({ type: SAVE_SONG_SUCCEEDED, payload: { song: savedSong } });\r\n      } catch (error) {\r\n        if(song){\r\n          alert('You are offline! The operation will be commited once you are connected again.');\r\n          if(song._id){\r\n            log('update for later', song.name);\r\n            const oldItems = (await getLocalItems()).value;\r\n            if(oldItems){\r\n              const newItems = JSON.parse(oldItems);\r\n              for(let i=0;i<newItems.length;i++){\r\n                if(newItems[i]._id === song._id){\r\n                  newItems[i] = song;\r\n                }\r\n              }\r\n              addLocalItems(newItems);\r\n            }\r\n            addOperationToLocal(new OperationProps('update', song));\r\n          }\r\n          else{\r\n            log('save for later', song.name);\r\n    \r\n            addItemToLocal(song);\r\n            addOperationToLocal(new OperationProps('add', song));\r\n\r\n          }\r\n          dispatch({ type: SAVE_SONG_SUCCEEDED, payload: { song: song } });\r\n        }\r\n        else{\r\n          log('saveSong failed');\r\n          dispatch({ type: SAVE_SONG_FAILED, payload: { error } });\r\n        }\r\n      }\r\n  \r\n\r\n  }\r\n\r\n  function wsEffect() {\r\n    let canceled = false;\r\n    log('wsEffect - connecting');\r\n    let closeWebSocket: () => void;\r\n    if (token?.trim()) {\r\n      closeWebSocket = newWebSocket(token, message => {\r\n        if (canceled) {\r\n          return;\r\n        }\r\n        const { type, payload: song } = message;\r\n        log(`ws message, song ${type}`);\r\n        if (type === 'created' || type === 'updated') {\r\n          dispatch({ type: SAVE_SONG_SUCCEEDED, payload: { song } });\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      log('wsEffect - disconnecting');\r\n      dispatch({type: 'CLEAR_SONGS'});\r\n      canceled = true;\r\n      closeWebSocket?.();\r\n    }\r\n  }\r\n};\r\n","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\index.tsx",[],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\auth\\index.tsx",[],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\auth\\AuthProvider.tsx",["93","94","95"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogger } from '../core';\r\nimport { login as loginApi } from './AuthApi';\r\nimport { Plugins } from '@capacitor/core';\r\nimport { clearToken, checkLoginToken, clearOfflineOperations, clearLocalItems } from '../core/LocalStorage'\r\n\r\n\r\nconst log = getLogger('AuthProvider');\r\n\r\ntype LoginFn = (username?: string, password?: string) => void;\r\ntype LogoutFn = () => void;\r\n\r\nexport interface AuthState {\r\n  authenticationError: Error | null;\r\n  isAuthenticated: boolean;\r\n  isAuthenticating: boolean;\r\n  login?: LoginFn;\r\n  logout?: LogoutFn;\r\n  pendingAuthentication?: boolean;\r\n  username?: string;\r\n  password?: string;\r\n  token: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: false,\r\n  isAuthenticating: false,\r\n  authenticationError: null,\r\n  pendingAuthentication: false,\r\n  token: '',\r\n};\r\n\r\nexport const AuthContext = React.createContext<AuthState>(initialState);\r\n\r\ninterface AuthProviderProps {\r\n  children: PropTypes.ReactNodeLike,\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [state, setState] = useState<AuthState>(initialState);\r\n  const { isAuthenticated, isAuthenticating, authenticationError, pendingAuthentication, token } = state;\r\n  const login = useCallback<LoginFn>(loginCallback, []);\r\n  const logout = useCallback<LogoutFn>(logOutCallBack, []);\r\n  useEffect(authenticationEffect, [pendingAuthentication]);\r\n  const value = { isAuthenticated, login, logout, isAuthenticating, authenticationError, token };\r\n  const {Storage} = Plugins;\r\n\r\n  if(!state.isAuthenticated){\r\n    checkIfLocalLoggin();\r\n  }\r\n\r\n\r\n  log('render');\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n\r\n  function checkIfLocalLoggin(){\r\n    Storage.get({key: 'token'}).then(({value}) => {\r\n      if(value){\r\n        setState(\r\n          {token: JSON.parse(value), isAuthenticated: true, isAuthenticating: false, pendingAuthentication: false, authenticationError: null\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  function loginCallback(username?: string, password?: string): void {\r\n    log('login');\r\n    setState({\r\n      ...state,\r\n      pendingAuthentication: true,\r\n      username,\r\n      password\r\n    });\r\n  }\r\n\r\n  function logOutCallBack() {\r\n    clearToken();\r\n    clearLocalItems();\r\n    clearOfflineOperations();\r\n    setState(initialState);\r\n  }\r\n\r\n  function authenticationEffect() {\r\n    let canceled = false;\r\n    authenticate();\r\n    return () => {\r\n      canceled = true;\r\n    }\r\n\r\n    async function authenticate() {\r\n      if (!pendingAuthentication) {\r\n        log('authenticate, !pendingAuthentication, return');\r\n        return;\r\n      }\r\n      try {\r\n        log('authenticate...');\r\n        setState({\r\n          ...state,\r\n          isAuthenticating: true,\r\n        });\r\n        const { username, password } = state;\r\n        const { token } = await loginApi(username, password);\r\n        Storage.set({key: 'token', value: JSON.stringify(token)});\r\n        if (canceled) {\r\n          return;\r\n        }\r\n        log('authenticate succeeded');\r\n        \r\n        setState({\r\n          ...state,\r\n          token,\r\n          pendingAuthentication: false,\r\n          isAuthenticated: true,\r\n          isAuthenticating: false,\r\n        });\r\n      } catch (error) {\r\n        if (canceled) {\r\n          return;\r\n        }\r\n        log('authenticate failed');\r\n        setState({\r\n          ...state,\r\n          authenticationError: error,\r\n          pendingAuthentication: false,\r\n          isAuthenticating: false,\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\SongApi.tsx",[],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\OperationProps.tsx",["96","97"],"import { OperationCanceledException } from \"typescript\";\r\nimport Song from \"./Song\";\r\nimport { SongProps } from \"./SongProps\";\r\n\r\nexport class OperationProps{\r\n    type: string;\r\n    song: SongProps;\r\n\r\n    constructor(type: string, song: SongProps){\r\n        this.type = type;\r\n        this.song = song;\r\n    }\r\n}\r\n","D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\core\\LocalStorage.tsx",[],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\network\\useNetwork.tsx",[],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\SongList.tsx",["98","99","100"],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\SongEdit.tsx",["101","102","103","104","105","106","107"],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\auth\\PrivateRoute.tsx",[],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\auth\\Login.tsx",[],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\core\\index.tsx",[],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\auth\\AuthApi.tsx",[],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\Song.tsx",["108"],"D:\\Facultate\\Anul3Semestrul1\\Mobile\\Lab1\\Ionic\\ionicApp\\src\\todo\\usePhotoGalllery.tsx",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":28,"column":10,"nodeType":"115","messageId":"116","endLine":28,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":99,"column":76,"nodeType":"119","endLine":99,"endColumn":83,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":107,"column":29,"nodeType":"119","endLine":107,"endColumn":60,"suggestions":"122"},{"ruleId":"117","severity":1,"message":"123","line":113,"column":31,"nodeType":"119","endLine":113,"endColumn":56,"suggestions":"124"},{"ruleId":"113","severity":1,"message":"125","line":6,"column":22,"nodeType":"115","messageId":"116","endLine":6,"endColumn":37},{"ruleId":"117","severity":1,"message":"126","line":43,"column":53,"nodeType":"119","endLine":43,"endColumn":55,"suggestions":"127"},{"ruleId":"117","severity":1,"message":"128","line":45,"column":35,"nodeType":"119","endLine":45,"endColumn":58,"suggestions":"129"},{"ruleId":"113","severity":1,"message":"130","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"131","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":12},{"ruleId":"113","severity":1,"message":"132","line":22,"column":10,"nodeType":"115","messageId":"116","endLine":22,"endColumn":19},{"ruleId":"113","severity":1,"message":"133","line":24,"column":10,"nodeType":"115","messageId":"116","endLine":24,"endColumn":16},{"ruleId":"117","severity":1,"message":"134","line":40,"column":8,"nodeType":"119","endLine":40,"endColumn":22,"suggestions":"135"},{"ruleId":"113","severity":1,"message":"136","line":22,"column":9,"nodeType":"115","messageId":"116","endLine":22,"endColumn":14},{"ruleId":"113","severity":1,"message":"137","line":25,"column":10,"nodeType":"115","messageId":"116","endLine":25,"endColumn":29},{"ruleId":"113","severity":1,"message":"138","line":37,"column":12,"nodeType":"115","messageId":"116","endLine":37,"endColumn":18},{"ruleId":"113","severity":1,"message":"139","line":37,"column":31,"nodeType":"115","messageId":"116","endLine":37,"endColumn":42},{"ruleId":"113","severity":1,"message":"140","line":39,"column":13,"nodeType":"115","messageId":"116","endLine":39,"endColumn":23},{"ruleId":"113","severity":1,"message":"141","line":39,"column":25,"nodeType":"115","messageId":"116","endLine":39,"endColumn":33},{"ruleId":"113","severity":1,"message":"142","line":39,"column":35,"nodeType":"115","messageId":"116","endLine":39,"endColumn":44},{"ruleId":"143","severity":1,"message":"144","line":31,"column":28,"nodeType":"145","endLine":31,"endColumn":66},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"@typescript-eslint/no-unused-vars","'useNetwork' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'token'. Either exclude it or remove the dependency array.","ArrayExpression",["148"],"React Hook useEffect has missing dependencies: 'endScrolling', 'resetView', and 'songs'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has a missing dependency: 'saveSongCallback'. Either include it or remove the dependency array.",["150"],"'checkLoginToken' is defined but never used.","React Hook useCallback has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["151"],"React Hook useEffect has missing dependencies: 'Storage' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["152"],"'OperationCanceledException' is defined but never used.","'Song' is defined but never used.","'SongProps' is defined but never used.","'logDOM' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["153"],"'Photo' is defined but never used.","'FilesystemDirectory' is defined but never used.","'photos' is assigned a value but never used.","'deletePhoto' is assigned a value but never used.","'deleteFile' is assigned a value but never used.","'readFile' is assigned a value but never used.","'writeFile' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: []",{"range":"166","text":"167"},"Update the dependencies array to be: [token, page, pageSize, filter, endScrolling, songs, resetView]",{"range":"168","text":"169"},"Update the dependencies array to be: [networkStatus.connected, saveSongCallback]",{"range":"170","text":"171"},"Update the dependencies array to be: [state]",{"range":"172","text":"173"},"Update the dependencies array to be: [Storage, pendingAuthentication, state]",{"range":"174","text":"175"},"Update the dependencies array to be: [page, filter, fetchData]",{"range":"176","text":"177"},[3504,3511],"[]",[3770,3801],"[token, page, pageSize, filter, endScrolling, songs, resetView]",[3878,3903],"[networkStatus.connected, saveSongCallback]",[1379,1381],"[state]",[1480,1503],"[Storage, pendingAuthentication, state]",[1191,1205],"[page, filter, fetchData]"]